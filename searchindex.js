Search.setIndex({"docnames": ["api", "generated/cvpy.base.CASThreadTunerResults.CASThreadTunerResults", "generated/cvpy.base.CASThreadTunerResults.CASThreadTunerResults.plot_exec_times", "generated/cvpy.base.ImageTable.ImageTable", "generated/cvpy.base.ImageTable.ImageTable.as_dict", "generated/cvpy.base.ImageTable.ImageTable.has_decoded_images", "generated/cvpy.biomedimage.BiomedImage.BiomedImage", "generated/cvpy.biomedimage.BiomedImage.BiomedImage.mask_image", "generated/cvpy.biomedimage.BiomedImage.BiomedImage.morphological_gradient", "generated/cvpy.biomedimage.BiomedImage.BiomedImage.quantify_sphericity", "generated/cvpy.image.Image.Image", "generated/cvpy.image.Image.Image.convert_to_CAS_column", "generated/cvpy.image.Image.Image.convert_wide_to_numpy", "generated/cvpy.image.Image.Image.fetch_geometry_info", "generated/cvpy.image.Image.Image.fetch_image_array", "generated/cvpy.image.Image.Image.get_image_array", "generated/cvpy.image.Image.Image.get_image_array_const_ctype", "generated/cvpy.image.Image.Image.get_image_array_from_row", "generated/cvpy.image.Image.Image.mask_image", "generated/cvpy.utils.CASThreadTuner.CASThreadTuner", "generated/cvpy.utils.CASThreadTuner.CASThreadTuner.tune_thread_count", "generated/cvpy.visualization.display_3D_image_slices", "generated/cvpy.visualization.display_3D_image_slices_from_array", "generated/cvpy.visualization.display_3D_surface", "generated/cvpy.visualization.display_image_slice", "index", "installation", "license"], "filenames": ["api.rst", "generated/cvpy.base.CASThreadTunerResults.CASThreadTunerResults.rst", "generated/cvpy.base.CASThreadTunerResults.CASThreadTunerResults.plot_exec_times.rst", "generated/cvpy.base.ImageTable.ImageTable.rst", "generated/cvpy.base.ImageTable.ImageTable.as_dict.rst", "generated/cvpy.base.ImageTable.ImageTable.has_decoded_images.rst", "generated/cvpy.biomedimage.BiomedImage.BiomedImage.rst", "generated/cvpy.biomedimage.BiomedImage.BiomedImage.mask_image.rst", "generated/cvpy.biomedimage.BiomedImage.BiomedImage.morphological_gradient.rst", "generated/cvpy.biomedimage.BiomedImage.BiomedImage.quantify_sphericity.rst", "generated/cvpy.image.Image.Image.rst", "generated/cvpy.image.Image.Image.convert_to_CAS_column.rst", "generated/cvpy.image.Image.Image.convert_wide_to_numpy.rst", "generated/cvpy.image.Image.Image.fetch_geometry_info.rst", "generated/cvpy.image.Image.Image.fetch_image_array.rst", "generated/cvpy.image.Image.Image.get_image_array.rst", "generated/cvpy.image.Image.Image.get_image_array_const_ctype.rst", "generated/cvpy.image.Image.Image.get_image_array_from_row.rst", "generated/cvpy.image.Image.Image.mask_image.rst", "generated/cvpy.utils.CASThreadTuner.CASThreadTuner.rst", "generated/cvpy.utils.CASThreadTuner.CASThreadTuner.tune_thread_count.rst", "generated/cvpy.visualization.display_3D_image_slices.rst", "generated/cvpy.visualization.display_3D_image_slices_from_array.rst", "generated/cvpy.visualization.display_3D_surface.rst", "generated/cvpy.visualization.display_image_slice.rst", "index.rst", "installation.rst", "license.rst"], "titles": ["API Reference", "cvpy.base.CASThreadTunerResults.CASThreadTunerResults", "cvpy.base.CASThreadTunerResults.CASThreadTunerResults.plot_exec_times", "cvpy.base.ImageTable.ImageTable", "cvpy.base.ImageTable.ImageTable.as_dict", "cvpy.base.ImageTable.ImageTable.has_decoded_images", "cvpy.biomedimage.BiomedImage.BiomedImage", "cvpy.biomedimage.BiomedImage.BiomedImage.mask_image", "cvpy.biomedimage.BiomedImage.BiomedImage.morphological_gradient", "cvpy.biomedimage.BiomedImage.BiomedImage.quantify_sphericity", "cvpy.image.Image.Image", "cvpy.image.Image.Image.convert_to_CAS_column", "cvpy.image.Image.Image.convert_wide_to_numpy", "cvpy.image.Image.Image.fetch_geometry_info", "cvpy.image.Image.Image.fetch_image_array", "cvpy.image.Image.Image.get_image_array", "cvpy.image.Image.Image.get_image_array_const_ctype", "cvpy.image.Image.Image.get_image_array_from_row", "cvpy.image.Image.Image.mask_image", "cvpy.utils.CASThreadTuner.CASThreadTuner", "cvpy.utils.CASThreadTuner.CASThreadTuner.tune_thread_count", "cvpy.visualization.display_3D_image_slices", "cvpy.visualization.display_3D_image_slices_from_array", "cvpy.visualization.display_3D_surface", "cvpy.visualization.display_image_slice", "SAS Viya Computer Vision API for Python", "Installation", "License"], "terms": {"class": [1, 2, 3, 6, 8, 9, 10, 19, 20, 27], "cas_server_mod": 1, "casservermod": 1, "none": [1, 3, 6, 7, 8, 9, 10, 18, 20], "controller_thread_rang": [1, 20], "rang": [1, 20], "worker_thread_rang": [1, 20], "objective_measur": [1, 20], "statist": [1, 20], "controller_optimal_thread_count": 1, "int": [1, 7, 8, 13, 14, 15, 16, 17, 20, 21, 24], "worker_optimal_thread_count": 1, "mean_exec_tim": 1, "list": [1, 7, 8, 18, 27], "median_exec_tim": 1, "minimum_exec_tim": 1, "maximum_exec_tim": 1, "stdev_exec_tim": 1, "store": 1, "present": 1, "result": [1, 2, 25, 27], "ca": [1, 2, 6, 8, 9, 10, 11, 13, 14, 16, 20, 21, 25], "thread": [1, 2, 20, 25], "optim": [1, 20], "tool": [1, 25], "paramet": [1, 2, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 20, 21, 22, 23, 24], "specifi": [1, 2, 3, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 20, 21, 22, 23, 24], "server": 1, "architectur": 1, "control": [1, 20, 27], "node": [1, 20], "each": [1, 3, 8, 20, 27], "worker": [1, 20], "object": [1, 4, 8, 9, 20, 27], "measur": [1, 20], "perform": [1, 2, 20, 27], "over": [1, 20], "given": [1, 2, 9, 20], "iter": [1, 20], "count": [1, 16, 20], "mean": [1, 20, 27], "record": 1, "execut": [1, 27], "time": 1, "median": [1, 20], "minimum": [1, 20, 24], "maximum": [1, 20, 24], "standard": 1, "deviat": 1, "__init__": [1, 3, 6, 10, 19], "construct": [1, 8, 9], "method": [1, 3, 6, 10, 19], "attribut": [1, 3, 6, 10, 27], "fig_width": 2, "float": [2, 9, 20, 23], "8": [2, 26, 27], "fig_height": 2, "figur": 2, "plot": 2, "tuner": [2, 25], "width": [2, 8], "height": [2, 8], "return": [2, 4, 5, 6, 7, 8, 10, 11, 12, 13, 14, 15, 16, 17, 18, 20], "matplotlib": [2, 25], "tabl": [3, 5, 7, 8, 9, 13, 14, 16, 18], "castabl": [3, 7, 8, 9, 13, 18], "imag": [3, 5, 6, 7, 8, 9, 20, 21, 22, 23, 24, 25], "str": [3, 8, 11, 13, 14, 16, 17, 21, 24], "dimens": [3, 13, 14, 15, 16, 17, 24], "resolut": [3, 14, 15, 16, 17, 24], "imageformat": 3, "path": 3, "label": 3, "id": 3, "size": 3, "type": [3, 14, 16, 27], "interfac": [3, 27], "input": [3, 7, 9, 18, 24], "contain": [3, 4, 5, 8, 9, 13, 27], "data": [3, 14, 25, 26], "name": [3, 11, 27], "column": [3, 7, 8, 11, 13, 18], "binari": [3, 9, 15, 16, 17], "format": [3, 14, 15, 17, 24, 27], "file": [3, 26, 27], "variabl": 3, "identifi": [3, 27], "byte": [3, 12, 17], "length": 3, "dict": 4, "creat": 4, "dictionari": 4, "represent": 4, "thi": [4, 5, 25, 27], "d": [4, 27], "all": [4, 27], "properti": 4, "kei": 4, "valu": [4, 9], "bool": [5, 7, 9, 18, 21, 22, 23], "check": 5, "decod": [5, 7, 18], "encod": 5, "b": [5, 27], "true": [5, 9, 21, 22, 23], "otherwis": [5, 27], "fals": [5, 7, 18, 21, 22, 23], "cas_sess": [6, 10], "implement": [6, 10], "biomed": [6, 25], "process": [6, 10], "function": [6, 10, 20], "session": [6, 10, 20], "imaget": [7, 8, 9, 18, 25], "mask": [7, 18], "casout": [7, 18], "input_background": [7, 9], "0": [7, 13, 14, 21, 22, 23, 24, 25, 27], "output_background": 7, "add_column": 7, "copy_var": [7, 8, 18], "appli": [7, 18, 27], "an": [7, 15, 16, 18, 20, 23, 24, 26, 27], "us": [7, 9, 18, 26, 27], "pixel": 7, "intens": 7, "background": [7, 9], "swat": [7, 8, 9, 13, 18, 21, 23, 26], "output": [7, 8, 9, 18], "whether": [7, 18, 27], "enum": [7, 18, 20], "metadata": 7, "ad": 7, "which": [7, 8, 18, 27], "copi": [7, 8, 18, 27], "kernel_width": 8, "3": [8, 26, 27], "kernel_height": 8, "comput": [8, 20, 27], "morpholog": 8, "gradient": 8, "3d": [8, 17, 21, 22, 24], "grayscal": 8, "kernel": 8, "exampl": [8, 9, 26, 27], "import": [8, 9, 27], "from": [8, 9, 13, 14, 15, 16, 17, 25, 26, 27], "base": [8, 9, 25, 27], "connect": [8, 9, 21], "": [8, 9, 11, 27], "com": [8, 9, 25, 26], "5570": [8, 9], "biom": [8, 9], "pass": 8, "api": [8, 9], "image_t": [8, 9], "input_t": [8, 9], "call": [8, 9, 20], "output_t": [8, 9], "quantify_spher": [8, 25], "use_spac": 9, "label_connect": 9, "labelconnect": 9, "spheric": 9, "quantifi": 9, "compon": 9, "when": [9, 21, 22, 23], "set": [9, 20, 21, 22, 23, 25], "space": [9, 13], "calcul": 9, "face": [9, 23], "vertex": 9, "level": [9, 25], "ar": [9, 26, 27], "static": [11, 12, 13, 14, 15, 16, 17, 20], "convert": [11, 12], "string": 11, "wide_imag": 12, "ndarrai": [12, 14, 15, 16, 17, 20, 22], "wide": 12, "numpi": [12, 14, 15, 16, 17, 22, 26], "arrai": [12, 14, 15, 16, 22], "buffer": 12, "imdata": [13, 14], "n": [13, 14, 15, 16], "qry": [13, 14], "poscol": 13, "_position_": 13, "oricol": 13, "_orientation_": 13, "spacol": 13, "_spacing_": 13, "dimcol": 13, "_dimension_": [13, 14], "fetch": [13, 14, 15, 23, 25], "geometri": 13, "inform": [13, 27], "number": [13, 14, 15, 17, 20], "queri": [13, 14], "posit": [13, 24], "orient": [13, 24], "tupl": [13, 23, 24], "_image_": 14, "dim": [14, 24], "re": 14, "_resolution_": 14, "ctype": [14, 16], "_channeltype_": 14, "ccount": 14, "1": [14, 15, 16, 17, 23, 25, 26, 27], "addit": [14, 24, 27], "channel": [14, 15, 16, 17], "image_binari": [15, 16, 17], "channel_count": [15, 16, 17], "get": [15, 16, 17], "panda": [15, 16, 24], "seri": [15, 16, 24], "index": [15, 16, 21, 24], "option": [15, 17], "ha": [15, 17, 27], "constant": 16, "myformat": 17, "row": 17, "arg": 19, "kwarg": 19, "action_funct": 20, "callabl": 20, "setup_funct": 20, "teardown_funct": 20, "5": [20, 26, 27], "4": [20, 27], "65": 20, "casthreadtunerresult": [20, 25], "action": [20, 25], "user": [20, 25, 26], "defin": [20, 27], "up": 20, "environ": [20, 26], "termin": [20, 27], "combin": [20, 27], "enummeta": 20, "stdev": 20, "__main__": 20, "self": 21, "hold": [21, 22, 23, 27], "slice_index_x": [21, 22], "slice_index_i": [21, 22], "slice_index_z": [21, 22], "displai": [21, 22, 23, 24, 27], "slice": [21, 22, 24], "i": [21, 22, 23, 25, 26, 27], "held": [21, 22, 23], "x": 21, "axi": 21, "y": 21, "z": 21, "surfac": 23, "vdata": 23, "fdata": 23, "color": 23, "op": 23, "sasdatafram": 23, "vertic": 23, "opac": 23, "ress": 24, "fmt": 24, "poss": 24, "ori": 24, "sca": 24, "perm": 24, "image_index": 24, "slice_index": 24, "rf": 24, "imin": 24, "100": 24, "imax": 24, "400": 24, "scale": 24, "permiss": [24, 27], "date": [25, 27], "feb": 25, "09": 25, "2023": 25, "version": [25, 26, 27], "dev": 25, "sourc": [25, 27], "repositori": [25, 26], "http": [25, 26, 27], "github": [25, 26], "sassoftwar": [25, 26], "cvpy": 25, "issu": [25, 27], "idea": 25, "support": [25, 27], "document": [25, 27], "onlinedoc": 25, "html": 25, "high": 25, "librari": 25, "assist": 25, "biomedimag": 25, "provid": [25, 27], "help": 25, "visual": [25, 26], "These": 25, "allow": 25, "easili": 25, "abl": 25, "move": 25, "out": [25, 27], "common": [25, 27], "open": 25, "mayavi": 25, "streamlin": 25, "further": 25, "analysi": 25, "we": [25, 27], "welcom": 25, "your": [25, 26, 27], "pleas": [25, 26], "read": 25, "md": 25, "detail": [25, 26], "how": [25, 27], "submit": [25, 27], "project": 25, "under": [25, 27], "apach": [25, 27], "2": [25, 26, 27], "see": [25, 26, 27], "full": [25, 26], "page": [25, 27], "instal": 25, "prerequisit": 25, "refer": 25, "mask_imag": 25, "morphological_gradi": 25, "util": 25, "casthreadtun": 25, "tune_thread_count": 25, "plot_exec_tim": 25, "convert_to_cas_column": 25, "convert_wide_to_numpi": 25, "fetch_geometry_info": 25, "fetch_image_arrai": 25, "get_image_array_from_row": 25, "get_image_arrai": 25, "get_image_array_const_ctyp": 25, "as_dict": 25, "has_decoded_imag": 25, "display_image_slic": 25, "display_3d_image_slices_from_arrai": 25, "display_3d_image_slic": 25, "display_3d_surfac": 25, "To": [26, 27], "access": 26, "capabl": 26, "you": [26, 27], "need": 26, "follow": [26, 27], "python": 26, "greater": 26, "can": 26, "anaconda": 26, "distribut": [26, 27], "anoth": 26, "choic": 26, "sa": 26, "script": 26, "wrapper": 26, "analyt": 26, "transfer": [26, 27], "packag": 26, "viya": 26, "activ": 26, "mine": 26, "machin": 26, "learn": 26, "vdmml": 26, "licens": 26, "scientif": 26, "also": [26, 27], "valid": 26, "credenti": 26, "backend": 26, "system": [26, 27], "administr": 26, "do": [26, 27], "have": [26, 27], "account": 26, "The": [26, 27], "written": [26, 27], "jupyt": 26, "notebook": 26, "If": [26, 27], "wish": 26, "run": 26, "own": [26, 27], "must": [26, 27], "still": 26, "view": 26, "browser": 26, "websit": 26, "heavi": 26, "complex": 26, "requir": [26, 27], "alreadi": 26, "step": 26, "below": [26, 27], "vtk": 26, "critic": 26, "depend": 26, "pip": 26, "cp37": 26, "cp37m": 26, "win_amd64": 26, "whl": 26, "note": 26, "specif": [26, 27], "download": 26, "wheel": 26, "here": 26, "mai": [26, 27], "error": 26, "messag": 26, "about": 26, "like": 26, "build": 26, "correctli": 26, "first": 26, "ignor": 26, "pyqt": 26, "gui": 26, "toolkit": 26, "pyqt5": 26, "command": 26, "git": 26, "januari": 27, "2004": 27, "www": 27, "org": 27, "term": 27, "AND": 27, "condit": 27, "FOR": 27, "reproduct": 27, "definit": 27, "shall": 27, "section": 27, "through": 27, "9": 27, "licensor": 27, "copyright": 27, "owner": 27, "entiti": 27, "author": 27, "grant": 27, "legal": 27, "union": 27, "act": 27, "other": 27, "For": 27, "purpos": 27, "power": 27, "direct": 27, "indirect": 27, "caus": 27, "manag": 27, "contract": 27, "ii": 27, "ownership": 27, "fifti": 27, "percent": 27, "50": 27, "more": 27, "outstand": 27, "share": 27, "iii": 27, "benefici": 27, "individu": 27, "exercis": 27, "form": 27, "prefer": 27, "make": 27, "modif": 27, "includ": 27, "limit": 27, "softwar": 27, "code": 27, "configur": 27, "ani": 27, "mechan": 27, "transform": 27, "translat": 27, "compil": 27, "gener": 27, "convers": 27, "media": 27, "work": 27, "authorship": 27, "made": 27, "avail": 27, "indic": 27, "notic": 27, "attach": 27, "appendix": 27, "deriv": 27, "editori": 27, "revis": 27, "annot": 27, "elabor": 27, "repres": 27, "whole": 27, "origin": 27, "remain": 27, "separ": 27, "mere": 27, "link": 27, "bind": 27, "thereof": 27, "contribut": 27, "intention": 27, "inclus": 27, "behalf": 27, "electron": 27, "verbal": 27, "commun": 27, "sent": 27, "its": 27, "mail": 27, "track": 27, "discuss": 27, "improv": 27, "exclud": 27, "conspicu": 27, "mark": 27, "design": 27, "write": 27, "Not": 27, "contributor": 27, "whom": 27, "been": 27, "receiv": 27, "subsequ": 27, "incorpor": 27, "within": 27, "subject": 27, "herebi": 27, "perpetu": 27, "worldwid": 27, "non": 27, "exclus": 27, "charg": 27, "royalti": 27, "free": 27, "irrevoc": 27, "reproduc": 27, "prepar": 27, "publicli": 27, "sublicens": 27, "patent": 27, "except": 27, "state": 27, "offer": 27, "sell": 27, "where": 27, "onli": 27, "those": 27, "claim": 27, "necessarili": 27, "infring": 27, "alon": 27, "wa": 27, "institut": 27, "litig": 27, "against": 27, "cross": 27, "counterclaim": 27, "lawsuit": 27, "alleg": 27, "constitut": 27, "contributori": 27, "redistribut": 27, "medium": 27, "without": 27, "meet": 27, "give": 27, "recipi": 27, "modifi": 27, "carri": 27, "promin": 27, "chang": 27, "c": 27, "retain": 27, "trademark": 27, "pertain": 27, "part": 27, "text": 27, "readabl": 27, "least": 27, "one": 27, "place": 27, "along": 27, "wherev": 27, "third": 27, "parti": 27, "normal": 27, "appear": 27, "content": 27, "add": 27, "alongsid": 27, "addendum": 27, "cannot": 27, "constru": 27, "statement": 27, "differ": 27, "compli": 27, "submiss": 27, "unless": 27, "explicitli": 27, "notwithstand": 27, "abov": 27, "noth": 27, "herein": 27, "supersed": 27, "agreement": 27, "regard": 27, "6": 27, "doe": 27, "trade": 27, "servic": 27, "product": 27, "reason": 27, "customari": 27, "describ": 27, "7": 27, "disclaim": 27, "warranti": 27, "applic": 27, "law": 27, "agre": 27, "AS": 27, "basi": 27, "OR": 27, "OF": 27, "kind": 27, "either": 27, "express": 27, "impli": 27, "titl": 27, "merchant": 27, "fit": 27, "A": 27, "particular": 27, "sole": 27, "respons": 27, "determin": 27, "appropri": 27, "assum": 27, "risk": 27, "associ": 27, "liabil": 27, "In": 27, "event": 27, "theori": 27, "tort": 27, "neglig": 27, "deliber": 27, "grossli": 27, "liabl": 27, "damag": 27, "special": 27, "incident": 27, "consequenti": 27, "charact": 27, "aris": 27, "inabl": 27, "loss": 27, "goodwil": 27, "stoppag": 27, "failur": 27, "malfunct": 27, "commerci": 27, "even": 27, "advis": 27, "possibl": 27, "accept": 27, "while": 27, "choos": 27, "fee": 27, "indemn": 27, "oblig": 27, "right": 27, "consist": 27, "howev": 27, "indemnifi": 27, "defend": 27, "harmless": 27, "incur": 27, "assert": 27, "end": 27, "boilerpl": 27, "field": 27, "enclos": 27, "bracket": 27, "replac": 27, "don": 27, "t": 27, "should": 27, "comment": 27, "syntax": 27, "recommend": 27, "descript": 27, "same": 27, "print": 27, "easier": 27, "identif": 27, "archiv": 27, "yyyi": 27, "complianc": 27, "obtain": 27, "languag": 27, "govern": 27}, "objects": {"": [[25, 0, 0, "-", "cvpy"]], "cvpy.base.CASThreadTunerResults": [[1, 1, 1, "", "CASThreadTunerResults"]], "cvpy.base.CASThreadTunerResults.CASThreadTunerResults": [[1, 2, 1, "", "__init__"], [2, 2, 1, "", "plot_exec_times"]], "cvpy.base.ImageTable": [[3, 1, 1, "", "ImageTable"]], "cvpy.base.ImageTable.ImageTable": [[3, 2, 1, "", "__init__"], [4, 2, 1, "", "as_dict"], [5, 2, 1, "", "has_decoded_images"]], "cvpy.biomedimage.BiomedImage": [[6, 1, 1, "", "BiomedImage"]], "cvpy.biomedimage.BiomedImage.BiomedImage": [[6, 2, 1, "", "__init__"], [7, 2, 1, "", "mask_image"], [8, 2, 1, "", "morphological_gradient"], [9, 2, 1, "", "quantify_sphericity"]], "cvpy.image.Image": [[10, 1, 1, "", "Image"]], "cvpy.image.Image.Image": [[10, 2, 1, "", "__init__"], [11, 2, 1, "", "convert_to_CAS_column"], [12, 2, 1, "", "convert_wide_to_numpy"], [13, 2, 1, "", "fetch_geometry_info"], [14, 2, 1, "", "fetch_image_array"], [15, 2, 1, "", "get_image_array"], [16, 2, 1, "", "get_image_array_const_ctype"], [17, 2, 1, "", "get_image_array_from_row"], [18, 2, 1, "", "mask_image"]], "cvpy.utils.CASThreadTuner": [[19, 1, 1, "", "CASThreadTuner"]], "cvpy.utils.CASThreadTuner.CASThreadTuner": [[19, 2, 1, "", "__init__"], [20, 2, 1, "", "tune_thread_count"]], "cvpy.visualization": [[21, 3, 1, "", "display_3D_image_slices"], [22, 3, 1, "", "display_3D_image_slices_from_array"], [23, 3, 1, "", "display_3D_surface"], [24, 3, 1, "", "display_image_slice"]]}, "objtypes": {"0": "py:module", "1": "py:class", "2": "py:method", "3": "py:function"}, "objnames": {"0": ["py", "module", "Python module"], "1": ["py", "class", "Python class"], "2": ["py", "method", "Python method"], "3": ["py", "function", "Python function"]}, "titleterms": {"api": [0, 25], "refer": 0, "biomed": 0, "imag": [0, 10, 11, 12, 13, 14, 15, 16, 17, 18], "ca": 0, "thread": 0, "tuner": 0, "result": 0, "imaget": [0, 3, 4, 5], "visual": [0, 21, 22, 23, 24], "cvpy": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 26], "base": [1, 2, 3, 4, 5], "casthreadtunerresult": [1, 2], "plot_exec_tim": 2, "as_dict": 4, "has_decoded_imag": 5, "biomedimag": [6, 7, 8, 9], "mask_imag": [7, 18], "morphological_gradi": 8, "quantify_spher": 9, "convert_to_cas_column": 11, "convert_wide_to_numpi": 12, "fetch_geometry_info": 13, "fetch_image_arrai": 14, "get_image_arrai": 15, "get_image_array_const_ctyp": 16, "get_image_array_from_row": 17, "util": [19, 20], "casthreadtun": [19, 20], "tune_thread_count": 20, "display_3d_image_slic": 21, "display_3d_image_slices_from_arrai": 22, "display_3d_surfac": 23, "display_image_slic": 24, "sa": 25, "viya": 25, "comput": 25, "vision": 25, "python": 25, "overview": 25, "contribut": 25, "licens": [25, 27], "addit": 25, "resourc": 25, "tabl": 25, "content": 25, "index": 25, "instal": 26, "prerequisit": 26, "mayavi": 26}, "envversion": {"sphinx.domains.c": 2, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 8, "sphinx.domains.index": 1, "sphinx.domains.javascript": 2, "sphinx.domains.math": 2, "sphinx.domains.python": 3, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx.ext.todo": 2, "sphinx.ext.intersphinx": 1, "sphinx": 57}, "alltitles": {"API Reference": [[0, "api-reference"]], "Biomedical Images": [[0, "biomedical-images"]], "CAS Thread Tuner": [[0, "cas-thread-tuner"]], "CAS Thread Tuner Results": [[0, "cas-thread-tuner-results"]], "Image": [[0, "image"]], "ImageTable": [[0, "imagetable"]], "Visualization Reference": [[0, "visualization-reference"]], "cvpy.base.CASThreadTunerResults.CASThreadTunerResults": [[1, "cvpy-base-casthreadtunerresults-casthreadtunerresults"]], "cvpy.base.CASThreadTunerResults.CASThreadTunerResults.plot_exec_times": [[2, "cvpy-base-casthreadtunerresults-casthreadtunerresults-plot-exec-times"]], "cvpy.base.ImageTable.ImageTable": [[3, "cvpy-base-imagetable-imagetable"]], "cvpy.base.ImageTable.ImageTable.as_dict": [[4, "cvpy-base-imagetable-imagetable-as-dict"]], "cvpy.base.ImageTable.ImageTable.has_decoded_images": [[5, "cvpy-base-imagetable-imagetable-has-decoded-images"]], "cvpy.biomedimage.BiomedImage.BiomedImage": [[6, "cvpy-biomedimage-biomedimage-biomedimage"]], "cvpy.biomedimage.BiomedImage.BiomedImage.mask_image": [[7, "cvpy-biomedimage-biomedimage-biomedimage-mask-image"]], "cvpy.biomedimage.BiomedImage.BiomedImage.morphological_gradient": [[8, "cvpy-biomedimage-biomedimage-biomedimage-morphological-gradient"]], "cvpy.biomedimage.BiomedImage.BiomedImage.quantify_sphericity": [[9, "cvpy-biomedimage-biomedimage-biomedimage-quantify-sphericity"]], "cvpy.image.Image.Image": [[10, "cvpy-image-image-image"]], "cvpy.image.Image.Image.convert_to_CAS_column": [[11, "cvpy-image-image-image-convert-to-cas-column"]], "cvpy.image.Image.Image.convert_wide_to_numpy": [[12, "cvpy-image-image-image-convert-wide-to-numpy"]], "cvpy.image.Image.Image.fetch_geometry_info": [[13, "cvpy-image-image-image-fetch-geometry-info"]], "cvpy.image.Image.Image.fetch_image_array": [[14, "cvpy-image-image-image-fetch-image-array"]], "cvpy.image.Image.Image.get_image_array": [[15, "cvpy-image-image-image-get-image-array"]], "cvpy.image.Image.Image.get_image_array_const_ctype": [[16, "cvpy-image-image-image-get-image-array-const-ctype"]], "cvpy.image.Image.Image.get_image_array_from_row": [[17, "cvpy-image-image-image-get-image-array-from-row"]], "cvpy.image.Image.Image.mask_image": [[18, "cvpy-image-image-image-mask-image"]], "cvpy.utils.CASThreadTuner.CASThreadTuner": [[19, "cvpy-utils-casthreadtuner-casthreadtuner"]], "cvpy.utils.CASThreadTuner.CASThreadTuner.tune_thread_count": [[20, "cvpy-utils-casthreadtuner-casthreadtuner-tune-thread-count"]], "cvpy.visualization.display_3D_image_slices": [[21, "cvpy-visualization-display-3d-image-slices"]], "cvpy.visualization.display_3D_image_slices_from_array": [[22, "cvpy-visualization-display-3d-image-slices-from-array"]], "cvpy.visualization.display_3D_surface": [[23, "cvpy-visualization-display-3d-surface"]], "cvpy.visualization.display_image_slice": [[24, "cvpy-visualization-display-image-slice"]], "SAS Viya Computer Vision API for Python": [[25, "module-cvpy"]], "Overview": [[25, "overview"]], "Contributing": [[25, "contributing"]], "License": [[25, "license"], [27, "license"]], "Additional Resources": [[25, "additional-resources"]], "Table of Contents": [[25, "table-of-contents"]], "Index": [[25, "index"]], "Installation": [[26, "installation"]], "Prerequisites": [[26, "prerequisites"]], "Mayavi Installation": [[26, "mayavi-installation"]], "CVPy Installation": [[26, "cvpy-installation"]]}, "indexentries": {"casthreadtunerresults (class in cvpy.base.casthreadtunerresults)": [[1, "cvpy.base.CASThreadTunerResults.CASThreadTunerResults"]], "__init__() (cvpy.base.casthreadtunerresults.casthreadtunerresults method)": [[1, "cvpy.base.CASThreadTunerResults.CASThreadTunerResults.__init__"]], "plot_exec_times() (cvpy.base.casthreadtunerresults.casthreadtunerresults method)": [[2, "cvpy.base.CASThreadTunerResults.CASThreadTunerResults.plot_exec_times"]], "imagetable (class in cvpy.base.imagetable)": [[3, "cvpy.base.ImageTable.ImageTable"]], "__init__() (cvpy.base.imagetable.imagetable method)": [[3, "cvpy.base.ImageTable.ImageTable.__init__"]], "as_dict() (cvpy.base.imagetable.imagetable method)": [[4, "cvpy.base.ImageTable.ImageTable.as_dict"]], "has_decoded_images() (cvpy.base.imagetable.imagetable method)": [[5, "cvpy.base.ImageTable.ImageTable.has_decoded_images"]], "biomedimage (class in cvpy.biomedimage.biomedimage)": [[6, "cvpy.biomedimage.BiomedImage.BiomedImage"]], "__init__() (cvpy.biomedimage.biomedimage.biomedimage method)": [[6, "cvpy.biomedimage.BiomedImage.BiomedImage.__init__"]], "mask_image() (cvpy.biomedimage.biomedimage.biomedimage method)": [[7, "cvpy.biomedimage.BiomedImage.BiomedImage.mask_image"]], "morphological_gradient() (cvpy.biomedimage.biomedimage.biomedimage method)": [[8, "cvpy.biomedimage.BiomedImage.BiomedImage.morphological_gradient"]], "quantify_sphericity() (cvpy.biomedimage.biomedimage.biomedimage method)": [[9, "cvpy.biomedimage.BiomedImage.BiomedImage.quantify_sphericity"]], "image (class in cvpy.image.image)": [[10, "cvpy.image.Image.Image"]], "__init__() (cvpy.image.image.image method)": [[10, "cvpy.image.Image.Image.__init__"]], "convert_to_cas_column() (cvpy.image.image.image static method)": [[11, "cvpy.image.Image.Image.convert_to_CAS_column"]], "convert_wide_to_numpy() (cvpy.image.image.image static method)": [[12, "cvpy.image.Image.Image.convert_wide_to_numpy"]], "fetch_geometry_info() (cvpy.image.image.image static method)": [[13, "cvpy.image.Image.Image.fetch_geometry_info"]], "fetch_image_array() (cvpy.image.image.image static method)": [[14, "cvpy.image.Image.Image.fetch_image_array"]], "get_image_array() (cvpy.image.image.image static method)": [[15, "cvpy.image.Image.Image.get_image_array"]], "get_image_array_const_ctype() (cvpy.image.image.image static method)": [[16, "cvpy.image.Image.Image.get_image_array_const_ctype"]], "get_image_array_from_row() (cvpy.image.image.image static method)": [[17, "cvpy.image.Image.Image.get_image_array_from_row"]], "mask_image() (cvpy.image.image.image method)": [[18, "cvpy.image.Image.Image.mask_image"]], "casthreadtuner (class in cvpy.utils.casthreadtuner)": [[19, "cvpy.utils.CASThreadTuner.CASThreadTuner"]], "__init__() (cvpy.utils.casthreadtuner.casthreadtuner method)": [[19, "cvpy.utils.CASThreadTuner.CASThreadTuner.__init__"]], "tune_thread_count() (cvpy.utils.casthreadtuner.casthreadtuner static method)": [[20, "cvpy.utils.CASThreadTuner.CASThreadTuner.tune_thread_count"]], "display_3d_image_slices() (in module cvpy.visualization)": [[21, "cvpy.visualization.display_3D_image_slices"]], "display_3d_image_slices_from_array() (in module cvpy.visualization)": [[22, "cvpy.visualization.display_3D_image_slices_from_array"]], "display_3d_surface() (in module cvpy.visualization)": [[23, "cvpy.visualization.display_3D_surface"]], "display_image_slice() (in module cvpy.visualization)": [[24, "cvpy.visualization.display_image_slice"]], "cvpy": [[25, "module-cvpy"]], "module": [[25, "module-cvpy"]]}})